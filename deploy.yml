# ==========================================================
# Ansible Playbook: Deploy LankaMart App & Save Logs
# Optimized for CI/CD via Jenkins on Azure VM
# ==========================================================

- name: Deploy LankaMart App to Azure VM
  hosts: cloud               # Target group defined in hosts inventory
  become: yes                # Only needed for tasks requiring sudo privileges

  vars:
    docker_user: "deliya123"                                 # Docker Hub username
    image_name: "lanka-mart-app"                              # Docker image name
    image_tag: "latest"                                       # Docker image tag
    container_name: "lanka-mart-app"                          # Name of the container
    port: "8081"                                              # Host VM port to map container's port 80
    log_dir: "/home/azureuser/lanka-mart-logs"               # Directory to store container logs
    log_file_path: "{{ log_dir }}/lanka-mart-app_logs.txt"   # Full path to the log file

  tasks:

    # ================= System-level tasks  =================
    - name: Ensure Docker is installed
      apt:
        name: docker.io
        state: present
        update_cache: yes
      # Installs Docker engine if not present; updates package cache first

    - name: Ensure Docker service is running
      systemd:
        name: docker
        state: started
        enabled: yes
      # Starts Docker service and ensures it runs on boot

    - name: Add azureuser to docker group
      user:
        name: azureuser
        groups: docker
        append: yes
      # Allows azureuser to run Docker commands without sudo

    - name: Install pip3
      apt:
        name: python3-pip
        state: present
        update_cache: yes
      # Installs Python package manager, required for installing Docker Python module

    - name: Ensure Docker Python module is installed
      shell: python3 -m pip install docker --break-system-packages
      # Installs Docker Python library needed by Ansible Docker modules

    - name: Remove old unused images
      shell: docker image prune -af
      ignore_errors: yes
      # Cleans up old Docker images to free disk space; ignores errors if none exist

    - name: Force pull latest Docker image from Docker Hub
      docker_image:
        name: "{{ docker_user }}/{{ image_name }}"
        tag: "{{ image_tag }}"
        source: pull
        force_source: true
        force_tag: true
      # Ensures the latest Docker image is always pulled from Docker Hub

    - name: Stop existing container if running
      docker_container:
        name: "{{ container_name }}"
        state: absent
        force_kill: yes
      # Stops and removes any existing container to avoid conflicts

    - name: Run new container with latest image
      docker_container:
        name: "{{ container_name }}"
        image: "{{ docker_user }}/{{ image_name }}:{{ image_tag }}"
        state: started
        ports:
          - "{{ port }}:80"
      # Launches new container and maps container port 80 to VM port defined in variables

    - name: Wait for container to start
      wait_for:
        host: 127.0.0.1
        port: "{{ port }}"
        timeout: 15
      # Waits until the container is ready and accessible on specified port

    # ================= Logs & Monitoring  =================
    - name: Ensure logs directory exists
      file:
        path: "{{ log_dir }}"
        state: directory
        mode: '0755'
      become: no
      # Creates dedicated directory for container logs; runs as azureuser (no sudo)

    - name: Save latest container logs to file
      shell: docker logs {{ container_name }} > {{ log_file_path }}
      become: no
      ignore_errors: yes
      # Captures latest container logs into a file for monitoring; ignores errors if container logs are empty

    - name: Display log file path
      debug:
        msg: "Container logs saved at {{ log_file_path }}"
      # Prints the log file path in Ansible output for reference


